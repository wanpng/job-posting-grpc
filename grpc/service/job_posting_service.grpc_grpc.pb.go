// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// JobPostingServiceClient is the client API for JobPostingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobPostingServiceClient interface {
	GetJobSeekerHiddenJobsInSearch(ctx context.Context, in *GetJobSeekerJobsRequest, opts ...grpc.CallOption) (*GetJobSeekerJobsResponse, error)
	GetJobSeekerSavedJobs(ctx context.Context, in *GetJobSeekerJobsRequest, opts ...grpc.CallOption) (*GetJobSeekerJobsResponse, error)
}

type jobPostingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobPostingServiceClient(cc grpc.ClientConnInterface) JobPostingServiceClient {
	return &jobPostingServiceClient{cc}
}

func (c *jobPostingServiceClient) GetJobSeekerHiddenJobsInSearch(ctx context.Context, in *GetJobSeekerJobsRequest, opts ...grpc.CallOption) (*GetJobSeekerJobsResponse, error) {
	out := new(GetJobSeekerJobsResponse)
	err := c.cc.Invoke(ctx, "/protos.service.JobPostingService/GetJobSeekerHiddenJobsInSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobPostingServiceClient) GetJobSeekerSavedJobs(ctx context.Context, in *GetJobSeekerJobsRequest, opts ...grpc.CallOption) (*GetJobSeekerJobsResponse, error) {
	out := new(GetJobSeekerJobsResponse)
	err := c.cc.Invoke(ctx, "/protos.service.JobPostingService/GetJobSeekerSavedJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobPostingServiceServer is the server API for JobPostingService service.
// All implementations must embed UnimplementedJobPostingServiceServer
// for forward compatibility
type JobPostingServiceServer interface {
	GetJobSeekerHiddenJobsInSearch(context.Context, *GetJobSeekerJobsRequest) (*GetJobSeekerJobsResponse, error)
	GetJobSeekerSavedJobs(context.Context, *GetJobSeekerJobsRequest) (*GetJobSeekerJobsResponse, error)
	mustEmbedUnimplementedJobPostingServiceServer()
}

// UnimplementedJobPostingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedJobPostingServiceServer struct {
}

func (UnimplementedJobPostingServiceServer) GetJobSeekerHiddenJobsInSearch(context.Context, *GetJobSeekerJobsRequest) (*GetJobSeekerJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobSeekerHiddenJobsInSearch not implemented")
}
func (UnimplementedJobPostingServiceServer) GetJobSeekerSavedJobs(context.Context, *GetJobSeekerJobsRequest) (*GetJobSeekerJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobSeekerSavedJobs not implemented")
}
func (UnimplementedJobPostingServiceServer) mustEmbedUnimplementedJobPostingServiceServer() {}

// UnsafeJobPostingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobPostingServiceServer will
// result in compilation errors.
type UnsafeJobPostingServiceServer interface {
	mustEmbedUnimplementedJobPostingServiceServer()
}

func RegisterJobPostingServiceServer(s grpc.ServiceRegistrar, srv JobPostingServiceServer) {
	s.RegisterService(&JobPostingService_ServiceDesc, srv)
}

func _JobPostingService_GetJobSeekerHiddenJobsInSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobSeekerJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobPostingServiceServer).GetJobSeekerHiddenJobsInSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.JobPostingService/GetJobSeekerHiddenJobsInSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobPostingServiceServer).GetJobSeekerHiddenJobsInSearch(ctx, req.(*GetJobSeekerJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobPostingService_GetJobSeekerSavedJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobSeekerJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobPostingServiceServer).GetJobSeekerSavedJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.JobPostingService/GetJobSeekerSavedJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobPostingServiceServer).GetJobSeekerSavedJobs(ctx, req.(*GetJobSeekerJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JobPostingService_ServiceDesc is the grpc.ServiceDesc for JobPostingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobPostingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protos.service.JobPostingService",
	HandlerType: (*JobPostingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJobSeekerHiddenJobsInSearch",
			Handler:    _JobPostingService_GetJobSeekerHiddenJobsInSearch_Handler,
		},
		{
			MethodName: "GetJobSeekerSavedJobs",
			Handler:    _JobPostingService_GetJobSeekerSavedJobs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/service/job_posting_service.grpc.proto",
}
